<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <context:component-scan base-package="org.btlas.controller"/>

    <mvc:annotation-driven conversion-service="conversionService" validator="validator">
        <!-- 如果属性 register-defaults="false" 默认注册的convert就没了,默认值为true-->
        <mvc:message-converters>
            <bean class="org.btlas.messageConvert.UserMessageConvert"></bean>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"></bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 数据格式转换 begin -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="org.btlas.convert.UserGenericConvert"></bean>
            </set>
        </property>
    </bean>

    <!-- 视图扩展名解析器，优先级最高 -->
    <bean class="org.btlas.framework.viewresolver.ViewNameExtensionViewResolver">
        <property name="order" value="0"/>
        <property name="viewResolvers">
            <map>
                <entry key="jsp" value-ref="internalResourceViewResolver"/>
                <entry key="vm" value-ref="velocityViewResolver"/>
            </map>
        </property>
    </bean>


    <!-- jsp视图解析器-->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order" value="100"/>
        <property name="prefix" value="/WEB-INF/views/jsp/"></property>
        <!--<property name="suffix" value=".jsp"></property>-->
    </bean>


    <!-- velocity 视图解析器-->
    <bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
        <property name="order" value="1"/>
        <property name="layoutUrl" value="layout/default.vm"/>
        <property name="cache" value="false"/>
        <!--<property name="suffix" value=".vm"/>-->
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="dateToolAttribute" value="dateTool"/>
        <property name="numberToolAttribute" value="numberTool"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="attributesMap" ref="velocityTools"/>
        <property name="redirectHttp10Compatible" value="false"/>
    </bean>
    <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/views/vtl/"/>
        <property name="velocityProperties">
            <props>
                <prop key="input.encoding">UTF-8</prop>
                <prop key="output.encoding">UTF-8</prop>
                <prop key="contentType">text/html;charset=UTF-8</prop>
                <prop key="velocimacro.library">macros/macro.vm</prop>
            </props>
        </property>
    </bean>

    <bean id="velocityTools" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="stringUtils">
                    <bean class="org.apache.commons.lang.StringUtils"/>
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <!-- 内容协商视图解析器 -->
    <!-- org.springframework.web.servlet.view.ContentNegotiatingViewResolver-->
    <bean id="contentNegotiatingViewResolver"
          class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        <property name="defaultViews">
            <list>
                <!-- jackson的json -->
                <!--<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>-->
                <!-- fastjson的json-->
                <bean class="com.alibaba.fastjson.support.spring.FastJsonJsonView">
                    <property name="extractValueFromSingleKeyModel" value="true"/>
                </bean>
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <constructor-arg>
                        <bean class="org.springframework.oxm.xstream.XStreamMarshaller">
                            <property name="autodetectAnnotations" value="true"/>
                        </bean>
                    </constructor-arg>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="defaultContentType" value="text/html"/>
        <!-- 忽略文件扩展名解析mediatype-->
        <property name="favorPathExtension" value="false"/>
        <!-- 启用url参数值解析mediatype-->
        <property name="favorParameter" value="true"/>
        <!-- url参数名mediatype-->
        <property name="parameterName" value="mediaType"/>
        <!-- 忽略请求头-->
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html"/>
                <entry key="xml" value="application/xml"/>
                <entry key="json" value="application/json"/>
            </map>
        </property>
    </bean>

    <!-- 数据校验 begin-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>


    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="cacheSeconds" value="0"></property>
        <property name="fileEncodings" value="utf-8"/>
        <property name="basenames">
            <list>
                <value>classpath:i18n/messages</value>
            </list>
        </property>
    </bean>

</beans>
